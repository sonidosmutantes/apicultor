[tool.poetry]
name = "apicultor"
version = "0.2.0"
description = "Music Information Retrieval and Sound Analysis Toolkit"
authors = ["Hern√°n Ordiales <hordiales@gmail.com>", "Marcelo Tuller <marscrophimself@protonmail.com>"]
license = "GPL-3.0"
readme = "README.md"
homepage = "https://github.com/sonidosmutantes/apicultor"
repository = "https://github.com/sonidosmutantes/apicultor"
keywords = ["music", "audio", "mir", "machine-learning", "sound-analysis"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Topic :: Multimedia :: Sound/Audio :: Analysis",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
packages = [{include = "apicultor", from = "src"}]

[tool.poetry.dependencies]
python = "^3.8"
numpy = "^1.21.0"
scipy = "^1.7.0"
scikit-learn = "^1.0.0"
librosa = "^0.9.0"
matplotlib = "^3.5.0"
pandas = "^1.3.0"
soundfile = "^0.10.0"
requests = "^2.25.0"
beautifulsoup4 = "^4.9.0"
colorama = "^0.4.0"
python-osc = "^1.7.0"
ffmpeg-python = "^0.2.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.0.0"
pytest-cov = "^4.0.0"
black = "^22.0.0"
flake8 = "^5.0.0"
mypy = "^1.0.0"

[tool.poetry.group.audio.dependencies]
pyo = {version = "^1.0.0", optional = true}
pyaudio = {version = "^0.2.11", optional = true}

[tool.poetry.scripts]
apicultor-analyze = "apicultor.cli.run_mir_analysis:main"
apicultor-emotion = "apicultor.emotion.MusicEmotionMachine:main"
apicultor-sonify = "apicultor.audio.sonification.Sonification:main"
apicultor-similarity = "apicultor.machine_learning.SoundSimilarity:main"
apicultor-quality = "apicultor.machine_learning.quality:main"
apicultor-compose = "apicultor.state_machine.SMComposition:main"
apicultor-convert = "apicultor.utils.helper.convert_to_ogg:main"
apicultor-download = "apicultor.utils.helper.WebScrapingDownload:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''

[tool.pytest.ini_options]
testpaths = ["tests_new"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=src/apicultor --cov-report=html --cov-report=term-missing"
pythonpath = ["src"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true